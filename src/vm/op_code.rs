#[derive(Debug, Clone, Copy)]
pub enum OpMode {
    IABC,
    IABx,
    IAsBx,
    IAx,
}

#[derive(Debug, Clone, Copy)]
pub enum OpArg {
    OpArgN,
    OpArgU,
    OpArgR,
    OpArgK,
}

pub enum OpCodeEnum {
    OpMove = 0,
    OpLOADI,
    OpLOADF,
    OpLOADK,
    OpLOADKX,
    OpLoadFalse,
    OpLFalseSkip,
    OpLoadTrue,
    OpLOADNIL,
    OpGetUpval,
    OpSetUpval,

    OpGetTabUp,
    OpGetTable,
    OpGetI,
    OpGetField,

    OpSetTabUp,
    OpSetTable,
    OpSetI,
    OpSetField,

    OpNEWTABLE,

    OpSELF,

    OpADDI,

    OpAddK,
    OpSubK,
    OpMulK,
    OpModK,
    OpPowK,
    OpDivK,
    OpIdivK,

    OpBANDK,
    OpBORK,
    OpBXORK,

    OpSHLI,
    OpSHRI,

    OpAdd,
    OpSub,
    OpMul,
    OpMod,
    OpPow,
    OpDiv,
    OpIdiv,

    OpBAND,
    OpBOR,
    OpBXOR,
    OpSHL,
    OpSHR,

    OpMmbin,
    OpMmbinI,
    OpMmbinK,

    OpUNM,
    OpBNOT,
    OpNOT,
    OpLEN,

    OpCONCAT,

    OpClose,
    OpTbc,
    OpJMP,
    OpEQ,
    OpLT,
    OpLE,

    OpEqK,
    OpEqI,
    OpLtI,
    OpLeI,
    OpGtI,
    OpGeI,

    OpTest,
    OpTestSet,

    OpCall,
    OpTailCall,
    
    OpReturn,
    OpReturn0,
    OpReturn1,

    OpTForRrep,
    OpTForCall,
    OpTForLoop,

    OpSetList,

    OpClosure,

    OpVararg,

    OpVarArgRerp,

    OpExtraArg,
}

pub struct OpCode {
    pub test_flag: u8,
    pub set_a_flag: u8,
    pub arg_b_mode: OpArg,
    pub arg_c_mode: OpArg,
    pub op_mode: OpMode,
    pub name: &'static str,
}
// const OP_CODE_COUNT: u32 = OpCodeEnum::from(OpCodeEnum::OpExtraArg);

pub const OP_CODE: [OpCode; 83] = [
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "Move",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IAsBx,
        name: "LOADKI",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABx,
        name: "LOADKF",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IAsBx,
        name: "LOADK",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgN,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABx,
        name: "LOADKX",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgU,
        op_mode: OpMode::IABC,
        name: "LOADFALSE",
    },    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgU,
        op_mode: OpMode::IABC,
        name: "LFALSESKIP",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgU,
        op_mode: OpMode::IABC,
        name: "LOADTRUE",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "LOADNIL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "GETUPVAL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "SETUPVAL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "GETTABUP",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "GETTABLE",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "GETI",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "GETFIELD",
    },

    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "GETTABUP",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "SETUPVAL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "SETTABLE",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "SETI",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "SETFIELD",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgU,
        op_mode: OpMode::IABC,
        name: "NEWTABLE",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "SELF",
    },


    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "ADDI",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "ADDK",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "SUBK",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "MULK",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "MODK",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "POWK",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "DIVK",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "IDIVK",
    },


    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "BANDK",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "BORK",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "SHLI",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "SHRI",
    },

    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "ADD",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "SUB",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "MUL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "MOD",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "POW",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "DIV",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "IDIV",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "BAND",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "BOR",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "BXOR",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "SHL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "SHR",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "MMBIN",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "MMBINI",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "MMBINK",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "UNM",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "BNOT",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "NOT",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "LEN",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgR,
        op_mode: OpMode::IABC,
        name: "CONCAT",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgR,
        op_mode: OpMode::IABC,
        name: "CLOSE",
    },

    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IAsBx,
        name: "TBC",
    },

    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IAsBx,
        name: "JMP",
    },
    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "EQ",
    },
    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "LT",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "LE",
    },
    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "EQK",
    },
    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "EQI",
    },
    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "LTI",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "LEI",
    },
    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "GTI",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "GEI",
    },
    OpCode {
        test_flag: 1,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgN,
        arg_c_mode: OpArg::OpArgU,
        op_mode: OpMode::IABC,
        name: "TEST",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgN,
        arg_c_mode: OpArg::OpArgU,
        op_mode: OpMode::IABC,
        name: "TESTSET",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgK,
        arg_c_mode: OpArg::OpArgK,
        op_mode: OpMode::IABC,
        name: "CALL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgU,
        op_mode: OpMode::IABC,
        name: "TAILCALL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "RETURN",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "RETURN0",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "RETURN1",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IAsBx,
        name: "FORLOOP",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IAsBx,
        name: "FORREAP",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgN,
        arg_c_mode: OpArg::OpArgU,
        op_mode: OpMode::IABC,
        name: "FORCALL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgR,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "TFORLOOP",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgN,
        arg_c_mode: OpArg::OpArgU,
        op_mode: OpMode::IAsBx,
        name: "TFORCALL",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgU,
        op_mode: OpMode::IAsBx,
        name: "SETLIST",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABx,
        name: "CLOSURE",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "VARARG",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 1,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgN,
        op_mode: OpMode::IABC,
        name: "VARARGPREP",
    },
    OpCode {
        test_flag: 0,
        set_a_flag: 0,
        arg_b_mode: OpArg::OpArgU,
        arg_c_mode: OpArg::OpArgU,
        op_mode: OpMode::IAx,
        name: "EXTRAARG",
    },
];


#[test]
fn test_op_mode() {
  fn op_mode(mm: u32, ot: u32, it: u32, t: u32, A: u32, m: u32) -> u32 {
    ((mm) << 7) | ((ot) << 6) | ((it) << 5) | ((t) << 4) | ((A) << 3) | (m)
  }
  println!("{:x}", op_mode(0, 0, 1, 0, 1, 0))
}